chapter:tutorial[Tutorial]

In this chapter you'll learn how to create a new Xrest project.

section[Creating A New Project]

The first step is to create a new Dynamic Web Project by choosing File -> New -> Project.... The dialog offers 
a couple of different project types. Select Dynamic Web Project from the category Web, choose a project 
name and a target runtime, choose the next button and add the folder src-gen and finish the wizard with 
the default settings.

The generated classes use JPA as persistence framework and JAX-RS as webservice framework, so add the APIs
(javax.persistence and jsr311) to WebContent\WEB-INF\lib.
Create a package in the source folder and a .dmodel file in there.
Declare a package and entities as described in ref:dmodel[The Domain Model Language].
To use Xbase expressions in the generate and validate methods, add the Xbase library to the lib folder.
Create another package in the source folder, add a .svc file and declare some services as decribed in
ref:service[Service].

Create a META-INF folder in the source folder and in there a persistence.xml. Choose a JPA implementation
and a database and add the required .jar files to the lib folder.
If you use eclipselink as JPA implementation and derby as database, your persistence.xml might look like
this:
code[<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	<persistence-unit name="messageboard" transaction-type="RESOURCE_LOCAL">
	<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
	<exclude-unlisted-classes>false</exclude-unlisted-classes>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />
			<property name="javax.persistence.jdbc.url"
				value="jdbc:derby:simpleDb;create=true" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />

			<!-- EclipseLink should create the database schema automatically -->
			<property name="eclipselink.ddl-generation" value="create-tables" />
			<property name="eclipselink.ddl-generation.output-mode"
				value="database" />
		</properties>

	</persistence-unit>
</persistence>]